group_by(us_state) %>%
summarize(salary = mean(extrapolated_annual_salary_unitless, na.rm = TRUE))
state_map_df <- map_data("state") %>%
left_join(state_salaries, by = c("region" = "us_state"))
clean_map <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank()
)
makeGraph <- function(g){
gendered_state_salaries <- salary_clean_country %>%
filter(gender == g) %>%
group_by(us_state) %>%
summarize(salary = mean(extrapolated_annual_salary_unitless, na.rm = TRUE))
state_map_df <- map_data("state") %>%
left_join(gendered_state_salaries, by = c("region" = "us_state"))
ggplot(state_map_df, aes(x = long, y = lat, fill = salary)) +
geom_polygon(aes(group = group),
color = "black") +
coord_fixed(1.3) +
scale_fill_viridis_c(name = "Extrapolated Annual Salary in USD") +
clean_map +
labs(title = paste0("State Salaries for ", str_replace(g, "a", "e") %>%
str_to_title()))
}
plots <- map(.x = c("man", "woman"),
.f = makeGraph)
plots[[1]]
plots[[2]]
# salary_clean_country$us_state %>%
#   str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
#   # str_replace_all(",.*", "") %>%
#   # unique()
#   str_detect(",") %>%
#   # length()
#   sum()
#
# # There are 248 empty states after we remove hawaii and alaska
# # There are 95 entries with multiple states
# # We can drop all of these
numEmpty <- salary_clean_country$us_state %>%
str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
str_detect(",") %>%
sum()
# The map will not contain hawaii or alaska so we remove those.
# We also remove entries with multiple states and go with the first state
# This is not a problem because there are only 95 entries with multiple states
# after the removal of hawaii and alaska, while there are well over 15000
# entries
salary_clean_map <- salary_clean_country
salary_clean_map$us_state <- salary_clean_map$us_state %>%
str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
str_replace_all(",.*$", "")
salary_clean_map <- salary_clean_map %>%
filter(us_state != "")
# salary_clean_country$us_state %>%
#   str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
#   # str_replace_all(",.*", "") %>%
#   # unique()
#   str_detect(",") %>%
#   # length()
#   sum()
#
# # There are 248 empty states after we remove hawaii and alaska
# # There are 95 entries with multiple states
# # We can drop all of these
salary_clean_country$us_state %>%
str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
str_detect(",") %>%
sum()
# The map will not contain hawaii or alaska so we remove those.
# We also remove entries with multiple states and go with the first state
# This is not a problem because there are only 95 entries with multiple states
# after the removal of hawaii and alaska, while there are well over 15000
# entries
salary_clean_map <- salary_clean_country
salary_clean_map$us_state <- salary_clean_map$us_state %>%
str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
str_replace_all(",.*$", "")
salary_clean_map <- salary_clean_map %>%
filter(us_state != "")
# salary_clean_country$us_state %>%
#   str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
#   # str_replace_all(",.*", "") %>%
#   # unique()
#   str_detect(",") %>%
#   # length()
#   sum()
#
# # There are 248 empty states after we remove hawaii and alaska
# # There are 95 entries with multiple states
# # We can drop all of these
salary_clean_country$us_state %>%
str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
str_detect(",")
# The map will not contain hawaii or alaska so we remove those.
# We also remove entries with multiple states and go with the first state
# This is not a problem because there are only 95 entries with multiple states
# after the removal of hawaii and alaska, while there are well over 15000
# entries
salary_clean_map <- salary_clean_country
salary_clean_map$us_state <- salary_clean_map$us_state %>%
str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
str_replace_all(",.*$", "")
salary_clean_map <- salary_clean_map %>%
filter(us_state != "")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, lubridate, ggplot2)
salary <- read.csv("./Datasets/salary.csv")
# Clean variable names
salary_clean_names <- salary %>%
select(-(X:X.5)) %>%
janitor::clean_names() %>%
rename(age = how_old_are_you,
industry = what_industry_do_you_work_in,
job_title_context = if_your_job_title_needs_additional_context_please_clarify_here,
extrapolated_annual_salary_unitless = what_is_your_annual_salary_you_ll_indicate_the_currency_in_a_later_question_if_you_are_part_time_or_hourly_please_enter_an_annualized_equivalent_what_you_would_earn_if_you_worked_the_job_40_hours_a_week_52_weeks_a_year,
compensation = how_much_additional_monetary_compensation_do_you_get_if_any_for_example_bonuses_or_overtime_in_an_average_year_please_only_include_monetary_compensation_here_not_the_value_of_benefits,
currency = please_indicate_the_currency,
other_currency = if_other_please_indicate_the_currency_here,
income_context = if_your_income_needs_additional_context_please_provide_it_here,
country = what_country_do_you_work_in,
us_state = if_you_re_in_the_u_s_what_state_do_you_work_in,
city = what_city_do_you_work_in,
overall_exp = how_many_years_of_professional_work_experience_do_you_have_overall,
field_exp = how_many_years_of_professional_work_experience_do_you_have_in_your_field,
education = what_is_your_highest_level_of_education_completed,
gender = what_is_your_gender,
race = what_is_your_race_choose_all_that_apply)
# Everything lowercase
for (n in colnames(salary_clean_names)){
salary_clean_names[[n]] <- str_to_lower(salary_clean_names[[n]])
}
# Change variable data type
salary_clean_dtype <- salary_clean_names %>%
mutate(timestamp = mdy_hms(timestamp),
age = factor(age),
overall_exp = factor(overall_exp),
field_exp = factor(field_exp),
currency = factor(currency),
education = factor(education),
gender = factor(gender),
is_white = str_detect(.$race, "white"))
# Get rid of thousands separators (",")
salary_clean_dtype$extrapolated_annual_salary_unitless <- salary_clean_dtype$extrapolated_annual_salary_unitless %>%
str_replace_all(",", "") %>%
as.double()
#Recode all variations to "USA"
salary_clean_country <- salary_clean_dtype %>%
mutate(country = recode(country,
"united states" = "USA",
"us" = "USA",
"usa" = "USA",
"u.s." = "USA",
"united states of america" = "USA"
)) %>%
# Filter only US responses
filter(country == "USA") %>%
# Country and Currency are now irrelevant - we only have US entries.
# Drop city as well because we will not use it in our analysis
select(-currency, -country, -city)
#Delete subjective question columns
salary_clean_country <- salary_clean_country %>%
select(-job_title, -job_title_context, -other_currency, -income_context)
salary_clean_country %>%
group_by(race) %>%
summarize(cnt = n()) %>%
arrange(desc(cnt))
#%>%
# ggplot(mapping = aes(x = race, y = cnt)) +
#geom_bar(stat = "identity")
education_gender_cleaned <- salary_clean_country %>%
mutate(education = recode(education,
"high school" = "High School",
"some college" = "Some College",
"college degree" = "Bachelor's",
"master's degree" = "Master's",
"phd" = "Ph.D.",
"professional degree (md, jd, etc.)" = "Professional Degree"
)) %>%
mutate(education = fct_relevel(education, "High School", "Some College", "Bachelor's", "Master's", "Ph.D.", "Professional Degree", "Other")) %>%
filter(gender == "man" | gender == "woman",
education != "")
education_gender_cleaned %>%
ggplot(aes(x = education)) +
geom_bar(fill = "#000080") +
facet_wrap(~gender, nrow = 2) +
labs(title = "Distribution of Highest Education Level by Gender", x = "Highest Level of Education", y = "Number of People")
education_gender_cleaned %>%
filter(extrapolated_annual_salary_unitless <= 350000) %>%
ggplot() +
geom_histogram(aes(x = extrapolated_annual_salary_unitless), fill = "#2a4b2f", binwidth = 10000) +
facet_wrap(~gender) +
labs(title = "Distribution of Annual Income by Gender", x = "Annual Income (USD)", y = "Number of People")
# salary_clean_country$us_state %>%
#   str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
#   # str_replace_all(",.*", "") %>%
#   # unique()
#   str_detect(",") %>%
#   # length()
#   sum()
#
# # There are 248 empty states after we remove hawaii and alaska
# # There are 95 entries with multiple states
# # We can drop all of these
salary_clean_country$us_state %>%
str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
str_detect(",")
# The map will not contain hawaii or alaska so we remove those.
# We also remove entries with multiple states and go with the first state
# This is not a problem because there are only 95 entries with multiple states
# after the removal of hawaii and alaska, while there are well over 15000
# entries
salary_clean_map <- salary_clean_country
salary_clean_map$us_state <- salary_clean_map$us_state %>%
str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
str_replace_all(",.*$", "")
salary_clean_map <- salary_clean_map %>%
filter(us_state != "")
salary_clean_country$us_state %>%
str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
str_detect(",") %>%
sum()
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, lubridate, ggplot2)
salary <- read.csv("./Datasets/salary.csv")
# Clean variable names
salary_clean_names <- salary %>%
select(-(X:X.5)) %>%
janitor::clean_names() %>%
rename(age = how_old_are_you,
industry = what_industry_do_you_work_in,
job_title_context = if_your_job_title_needs_additional_context_please_clarify_here,
extrapolated_annual_salary_unitless = what_is_your_annual_salary_you_ll_indicate_the_currency_in_a_later_question_if_you_are_part_time_or_hourly_please_enter_an_annualized_equivalent_what_you_would_earn_if_you_worked_the_job_40_hours_a_week_52_weeks_a_year,
compensation = how_much_additional_monetary_compensation_do_you_get_if_any_for_example_bonuses_or_overtime_in_an_average_year_please_only_include_monetary_compensation_here_not_the_value_of_benefits,
currency = please_indicate_the_currency,
other_currency = if_other_please_indicate_the_currency_here,
income_context = if_your_income_needs_additional_context_please_provide_it_here,
country = what_country_do_you_work_in,
us_state = if_you_re_in_the_u_s_what_state_do_you_work_in,
city = what_city_do_you_work_in,
overall_exp = how_many_years_of_professional_work_experience_do_you_have_overall,
field_exp = how_many_years_of_professional_work_experience_do_you_have_in_your_field,
education = what_is_your_highest_level_of_education_completed,
gender = what_is_your_gender,
race = what_is_your_race_choose_all_that_apply)
# Everything lowercase
for (n in colnames(salary_clean_names)){
salary_clean_names[[n]] <- str_to_lower(salary_clean_names[[n]])
}
# Change variable data type
salary_clean_dtype <- salary_clean_names %>%
mutate(timestamp = mdy_hms(timestamp),
age = factor(age),
overall_exp = factor(overall_exp),
field_exp = factor(field_exp),
currency = factor(currency),
education = factor(education),
gender = factor(gender),
is_white = str_detect(.$race, "white"))
# Get rid of thousands separators (",")
salary_clean_dtype$extrapolated_annual_salary_unitless <- salary_clean_dtype$extrapolated_annual_salary_unitless %>%
str_replace_all(",", "") %>%
as.double()
#Recode all variations to "USA"
salary_clean_country <- salary_clean_dtype %>%
mutate(country = recode(country,
"united states" = "USA",
"us" = "USA",
"usa" = "USA",
"u.s." = "USA",
"united states of america" = "USA"
)) %>%
# Filter only US responses
filter(country == "USA") %>%
# Country and Currency are now irrelevant - we only have US entries.
# Drop city as well because we will not use it in our analysis
select(-currency, -country, -city)
#Delete subjective question columns
salary_clean_country <- salary_clean_country %>%
select(-job_title, -job_title_context, -other_currency, -income_context)
salary_clean_country %>%
group_by(race) %>%
summarize(cnt = n()) %>%
arrange(desc(cnt))
#%>%
# ggplot(mapping = aes(x = race, y = cnt)) +
#geom_bar(stat = "identity")
education_gender_cleaned <- salary_clean_country %>%
mutate(education = recode(education,
"high school" = "High School",
"some college" = "Some College",
"college degree" = "Bachelor's",
"master's degree" = "Master's",
"phd" = "Ph.D.",
"professional degree (md, jd, etc.)" = "Professional Degree"
)) %>%
mutate(education = fct_relevel(education, "High School", "Some College", "Bachelor's", "Master's", "Ph.D.", "Professional Degree", "Other")) %>%
filter(gender == "man" | gender == "woman",
education != "")
education_gender_cleaned %>%
ggplot(aes(x = education)) +
geom_bar(fill = "#000080") +
facet_wrap(~gender, nrow = 2) +
labs(title = "Distribution of Highest Education Level by Gender", x = "Highest Level of Education", y = "Number of People")
education_gender_cleaned %>%
filter(extrapolated_annual_salary_unitless <= 350000) %>%
ggplot() +
geom_histogram(aes(x = extrapolated_annual_salary_unitless), fill = "#2a4b2f", binwidth = 10000) +
facet_wrap(~gender) +
labs(title = "Distribution of Annual Income by Gender", x = "Annual Income (USD)", y = "Number of People")
# salary_clean_country$us_state %>%
#   str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
#   # str_replace_all(",.*", "") %>%
#   # unique()
#   str_detect(",") %>%
#   # length()
#   sum()
#
# # There are 248 empty states after we remove hawaii and alaska
# # There are 95 entries with multiple states
# # We can drop all of these
numCommas <- salary_clean_country$us_state %>%
str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
str_detect(",") %>%
sum()
numEmpty <- salary_clean_country$us_state %>%
str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
str_replace_all(",.*$", "") %>%
str_detect("^$") %>%
sum()
# The map will not contain hawaii or alaska so we remove those.
# We also remove entries with multiple states and go with the first state
# This is not a problem because there are only 95 entries with multiple states
# after the removal of hawaii and alaska, while there are well over 15000
# entries
salary_clean_map <- salary_clean_country
salary_clean_map$us_state <- salary_clean_map$us_state %>%
str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
str_replace_all(",.*$", "")
salary_clean_map <- salary_clean_map %>%
filter(us_state != "")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, lubridate, ggplot2)
salary <- read.csv("./Datasets/salary.csv")
# Clean variable names
salary_clean_names <- salary %>%
select(-(X:X.5)) %>%
janitor::clean_names() %>%
rename(age = how_old_are_you,
industry = what_industry_do_you_work_in,
job_title_context = if_your_job_title_needs_additional_context_please_clarify_here,
extrapolated_annual_salary_unitless = what_is_your_annual_salary_you_ll_indicate_the_currency_in_a_later_question_if_you_are_part_time_or_hourly_please_enter_an_annualized_equivalent_what_you_would_earn_if_you_worked_the_job_40_hours_a_week_52_weeks_a_year,
compensation = how_much_additional_monetary_compensation_do_you_get_if_any_for_example_bonuses_or_overtime_in_an_average_year_please_only_include_monetary_compensation_here_not_the_value_of_benefits,
currency = please_indicate_the_currency,
other_currency = if_other_please_indicate_the_currency_here,
income_context = if_your_income_needs_additional_context_please_provide_it_here,
country = what_country_do_you_work_in,
us_state = if_you_re_in_the_u_s_what_state_do_you_work_in,
city = what_city_do_you_work_in,
overall_exp = how_many_years_of_professional_work_experience_do_you_have_overall,
field_exp = how_many_years_of_professional_work_experience_do_you_have_in_your_field,
education = what_is_your_highest_level_of_education_completed,
gender = what_is_your_gender,
race = what_is_your_race_choose_all_that_apply)
# Everything lowercase
for (n in colnames(salary_clean_names)){
salary_clean_names[[n]] <- str_to_lower(salary_clean_names[[n]])
}
# Change variable data type
salary_clean_dtype <- salary_clean_names %>%
mutate(timestamp = mdy_hms(timestamp),
age = factor(age),
overall_exp = factor(overall_exp),
field_exp = factor(field_exp),
currency = factor(currency),
education = factor(education),
gender = factor(gender),
is_white = str_detect(.$race, "white"))
# Get rid of thousands separators (",")
salary_clean_dtype$extrapolated_annual_salary_unitless <- salary_clean_dtype$extrapolated_annual_salary_unitless %>%
str_replace_all(",", "") %>%
as.double()
#Recode all variations to "USA"
salary_clean_country <- salary_clean_dtype %>%
mutate(country = recode(country,
"united states" = "USA",
"us" = "USA",
"usa" = "USA",
"u.s." = "USA",
"united states of america" = "USA"
)) %>%
# Filter only US responses
filter(country == "USA") %>%
# Country and Currency are now irrelevant - we only have US entries.
# Drop city as well because we will not use it in our analysis
select(-currency, -country, -city)
#Delete subjective question columns
salary_clean_country <- salary_clean_country %>%
select(-job_title, -job_title_context, -other_currency, -income_context)
salary_clean_country %>%
group_by(race) %>%
summarize(cnt = n()) %>%
arrange(desc(cnt))
#%>%
# ggplot(mapping = aes(x = race, y = cnt)) +
#geom_bar(stat = "identity")
education_gender_cleaned <- salary_clean_country %>%
mutate(education = recode(education,
"high school" = "High School",
"some college" = "Some College",
"college degree" = "Bachelor's",
"master's degree" = "Master's",
"phd" = "Ph.D.",
"professional degree (md, jd, etc.)" = "Professional Degree"
)) %>%
mutate(education = fct_relevel(education, "High School", "Some College", "Bachelor's", "Master's", "Ph.D.", "Professional Degree", "Other")) %>%
filter(gender == "man" | gender == "woman",
education != "")
education_gender_cleaned %>%
ggplot(aes(x = education)) +
geom_bar(fill = "#000080") +
facet_wrap(~gender, nrow = 2) +
labs(title = "Distribution of Highest Education Level by Gender", x = "Highest Level of Education", y = "Number of People")
education_gender_cleaned %>%
filter(extrapolated_annual_salary_unitless <= 350000) %>%
ggplot() +
geom_histogram(aes(x = extrapolated_annual_salary_unitless), fill = "#2a4b2f", binwidth = 10000) +
facet_wrap(~gender) +
labs(title = "Distribution of Annual Income by Gender", x = "Annual Income (USD)", y = "Number of People")
numCommas <- salary_clean_country$us_state %>%
str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
str_detect(",") %>%
sum()
numEmpty <- salary_clean_country$us_state %>%
str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
str_replace_all(",.*$", "") %>%
str_detect("^$") %>%
sum()
salary_clean_map <- salary_clean_country
salary_clean_map$us_state <- salary_clean_map$us_state %>%
str_replace_all("(hawaii|alaska)(,\\s)*", "") %>%
str_replace_all(",.*$", "")
salary_clean_map <- salary_clean_map %>%
filter(us_state != "")
state_salaries <- salary_clean_map %>%
group_by(us_state) %>%
summarize(salary = mean(extrapolated_annual_salary_unitless, na.rm = TRUE))
state_map_df <- map_data("state") %>%
left_join(state_salaries, by = c("region" = "us_state"))
clean_map <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank()
)
makeGraph <- function(g){
gendered_state_salaries <- salary_clean_map %>%
filter(gender == g) %>%
group_by(us_state) %>%
summarize(salary = mean(extrapolated_annual_salary_unitless, na.rm = TRUE))
state_map_df <- map_data("state") %>%
left_join(gendered_state_salaries, by = c("region" = "us_state"))
ggplot(state_map_df, aes(x = long, y = lat, fill = salary)) +
geom_polygon(aes(group = group),
color = "black") +
coord_fixed(1.3) +
scale_fill_viridis_c(limits = c(50000, 150000),
name = "Extrapolated Annual Salary in USD") +
clean_map +
labs(title = paste0("State Salaries for ", str_replace(g, "a", "e") %>%
str_to_title()))
}
plots <- map(.x = c("man", "woman"),
.f = makeGraph)
plots[[1]]
plots[[2]]
makeGraph("man")
salary_clean_map %>%
filter(gender =="man" %>% )
salary_clean_map %>%
filter(gender =="man") %>%
group_by(us_state) %>%
summarize(salary = mean(extrapolated_annual_salary_unitless, na.rm = TRUE))
salary_clean_map %>%
filter(gender=="man") %>%
filter(us_state = "colorado")
salary_clean_map %>%
filter(gender=="man") %>%
filter(us_state == "colorado")
salary_clean_map %>%
filter(gender == "man") %>%
group_by(us_state) %>%
summarize(salary = mean(extrapolated_annual_salary_unitless, na.rm = TRUE))
print(n=50)
thing <- salary_clean_map %>%
filter(gender == "man") %>%
group_by(us_state) %>%
summarize(salary = mean(extrapolated_annual_salary_unitless, na.rm = TRUE))
View(thing)
thing2 <- salary_clean_map %>%
filter(gender == "woman") %>%
group_by(us_state) %>%
summarize(salary = mean(extrapolated_annual_salary_unitless, na.rm = TRUE))
View(thing2)
